{"version":3,"file":"src_app_pages_sign_sign-page_module_ts.7270e18f97c0c6fe.js","mappings":"gQAUO,IAAMA,EAAY,MAAnB,MAAOA,EACXC,YACUC,YACN,CACJC,UAAUC,GACR,OAAOC,KAAKH,GAAGI,OAAOC,QACpBC,KAAKC,GACIA,EAAKC,KAAKC,GAAKA,EAAEC,KAAOR,IAGrC,+CAVWJ,GAAYa,yDAAZb,EAAYc,wBAAZd,CAAY,8BCNnBe,SACEA,SACFA,6BADEA,yDAqBMA,SACEA,SACFA,6BADEA,yDAdVA,SACEA,wBACEA,qBACFA,QACAA,qBAAW,QAEPA,SACFA,QACAA,aACEA,SACFA,QACAA,eAAwC,YAEpCA,yEAGFA,UAEFA,cAAGA,2BAAmEA,UAE1EA,iDAlBaA,sDAIPA,+BAGAA,+BAECA,4CAEgBA,iDAKhBA,sGAnBTA,oBACEA,wDAqBFA,iDArBiBA,gEAFnBA,SACEA,4BAuBFA,8BAvB+BA,2CCA1B,IAAMC,EAAiB,MAAxB,MAAOA,EAKXf,YACUC,EACAe,GADAZ,UACAA,UAHVA,mBAA0B,EAItB,CAEJa,WACEb,KAAKc,OAASd,KAAKY,GAAGG,SAASC,OAAOT,GACtCP,KAAKC,OAASD,KAAKH,GAAGI,OACtBD,KAAKiB,MAAQjB,KAAKH,GAAGI,OAAOC,QAC1BC,KAAIe,GACKA,EAAEb,KAAKC,GAAKA,EAAEC,KAAOP,KAAKc,WACjC,EAGJK,KAAS,CACPnB,KAAKiB,MACLjB,KAAKH,GAAGuB,UACPC,UAAU,CACXC,KAAOC,IACLC,QAAQC,IAAI,KAAMF,GAClBvB,KAAK0B,cAAgBH,EAAG,GAAGI,OAAOC,GAAKA,EAAEC,OAASN,EAAG,GAAGhB,GAAE,GAGhE,+CA5BWI,GAAiBH,iDAAjBG,EAAiBmB,6LDZ9BpB,sBAAY,iBAERA,6BACAA,qBACEA,qEAGFA,YAGJA,uBACEA,iDAyBFA,eAhCqBA,sDAOJA,wKCCJC,CAAiB,KCcjBoB,EAAc,MAArB,MAAOA,kDAAc,0BAAdA,gCAdTC,cAAsB,CAAC,CACrBC,KAAM,GACNC,UAAWvB,KAEbwB,KAEAC,QAQSL,CAAc","names":["SignByIdPipe","constructor","as","transform","value","this","signs$","pipe","map","data","find","s","id","core","pure","i0","SignPageComponent","ar","ngOnInit","signId","snapshot","params","sign$","d","forkJoin","people$","subscribe","next","ok","console","log","relatedPeople","filter","p","sign","selectors","SignPageModule","RouterModule","path","component","CommonModule","IonicModule"],"sourceRoot":"webpack:///","sources":["./src/app/pipes/sign-by-id.pipe.ts","./src/app/pages/sign/sign-page.component.html","./src/app/pages/sign/sign-page.component.ts","./src/app/pages/sign/sign-page.module.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Sign } from '../interfaces/sign';\nimport { APIService } from '../services/api.service';\n\n@Pipe({\n  name: 'signById',\n  standalone: true\n})\n\nexport class SignByIdPipe implements PipeTransform {\n  constructor(\n    private as: APIService\n  ) { }\n  transform(value: string): Observable<Sign> {\n    return this.as.signs$.pipe(\n      map((data) => {\n        return data.find(s => s.id === value) as Sign\n      })\n    );\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-back-button slot=\"start\" text=\"Torna\"></ion-back-button>\n    <ion-title>\n      <ng-container *ngIf=\"signId | signById | async as sign\">\n        {{ sign.name }}\n      </ng-container>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <ng-container *ngIf=\"signs$ | async as signs\">\n    <ion-item *ngFor=\"let person of relatedPeople\">\n      <ng-container *ngIf=\"person | deduceSign : signs as sign\">\n        <ion-avatar slot=\"start\">\n          <ion-img [src]=\"'/assets/icon/' + sign.name + '-1.svg'\"></ion-img>\n        </ion-avatar>\n        <ion-label>\n          <h3>\n            {{ person.name }}\n          </h3>\n          <p>\n            {{ sign.name }}\n          </p>\n          <p [routerLink]=\"'/jobs/' + person.job\">\n            <strong>\n              <ng-container *ngIf=\"person | deduceJob | async as job\">\n                {{ job.name }}\n              </ng-container>\n            </strong>\n          </p>\n          <p>Born {{ person.birth | date : 'dd/MMM/YYYY' }} in {{ person.city }}</p>\n        </ion-label>\n      </ng-container>\n    </ion-item>\n  </ng-container>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { forkJoin, map, Observable } from 'rxjs';\nimport { Person } from 'src/app/interfaces/person';\nimport { Sign } from 'src/app/interfaces/sign';\nimport { APIService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'sign-page',\n  templateUrl: 'sign-page.component.html'\n})\n\nexport class SignPageComponent implements OnInit {\n  signId!: string;\n  sign$!: Observable<Sign>;\n  signs$!: Observable<Sign[]>;\n  relatedPeople: Person[] = [];\n  constructor(\n    private as: APIService,\n    private ar: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.signId = this.ar.snapshot.params['id'];\n    this.signs$ = this.as.signs$;\n    this.sign$ = this.as.signs$.pipe(\n      map(d => {\n        return d.find(s => s.id === this.signId) as Sign\n      })\n    );\n\n    forkJoin([\n      this.sign$,\n      this.as.people$\n    ]).subscribe({\n      next: (ok: [Sign, Person[]]) => {\n        console.log('ok', ok);\n        this.relatedPeople = ok[1].filter(p => p.sign === ok[0].id);\n      }\n    })\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { DeduceJobPipe } from 'src/app/pipes/deduce-job.pipe';\nimport { DeduceSignPipe } from 'src/app/pipes/deduce-sign.pipe';\nimport { SignByIdPipe } from 'src/app/pipes/sign-by-id.pipe';\n\nimport { SignPageComponent } from './sign-page.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([{\n      path: '',\n      component: SignPageComponent\n    }]),\n    CommonModule,\n    DeduceJobPipe,\n    IonicModule,\n    DeduceSignPipe,\n    SignByIdPipe\n  ],\n  exports: [],\n  declarations: [SignPageComponent],\n  providers: [],\n})\nexport class SignPageModule { }\n"],"x_google_ignoreList":[]}